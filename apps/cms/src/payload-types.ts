/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    pages: Page;
    users: User;
    media: Media;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    footer: Footer;
    'main-menu': MainMenu;
    'theme-variables': ThemeVariable;
    address: Address;
  };
}
export interface Page {
  id: string;
  title: string;
  renderTitle?: boolean | null;
  content?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  blocks?:
    | (
        | ICallToAction
        | IFancyTextBlock
        | IFormBlock
        | IImageBlock
        | IImageGalleryBlock
        | IMapBlock
        | IMediaBlock
        | INumberTout
        | IResponsiveGrid
        | IReusableContentBlock
        | IRowBlock
        | ISlider
        | ISpacerBlock
        | ITestimonialBlock
        | ITextBlock
      )[]
    | null;
  slug?: string | null;
  publishedOn: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
export interface ICallToAction {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  text: {
    [k: string]: unknown;
  }[];
  alignment?: ('left' | 'center' | 'right') | null;
  background?: string | Media | null;
  textEffects?: ITextEffects;
  link: ILink;
  id?: string | null;
  blockName?: string | null;
  blockType: 'call-to-action-block';
}
export interface IBlockHeader {
  headerText?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  headerAlginment?: ('left' | 'center' | 'right') | null;
}
export interface Media {
  id: string;
  alt: string;
  caption?: string | null;
  darkModeFallback?: string | Media | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small_webp?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium_webp?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large_webp?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface ITextEffects {
  fadeIn?: boolean | null;
  sliding?: ('none' | 'left' | 'right' | 'up' | 'down') | null;
}
export interface ILink {
  type?: ('reference' | 'custom') | null;
  newTab?: boolean | null;
  reference?: {
    relationTo: 'pages';
    value: string | Page;
  } | null;
  url?: string | null;
  label: string;
  appearance?: ('default' | 'primary' | 'secondary') | null;
}
export interface IFancyTextBlock {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  text: {
    [k: string]: unknown;
  }[];
  textEffects?: ITextEffects;
  id?: string | null;
  blockName?: string | null;
  blockType: 'fancy-text-block';
}
export interface IFormBlock {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'form-block';
}
export interface IImageBlock {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  image: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'image-block';
}
export interface IImageGalleryBlock {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  images: {
    image: string | Media;
    caption?: string | null;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'image-gallery-block';
}
export interface IMapBlock {
  mapQuery?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'map-block';
}
export interface IMediaBlock {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  orientation?: ('vertical' | 'horizontal' | 'responsive') | null;
  text: {
    [k: string]: unknown;
  }[];
  textEffects?: ITextEffects;
  image: string | Media;
  position?: ('left' | 'right') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'media-block';
}
export interface INumberTout {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  number: number;
  numberSuffix?: string | null;
  countUp?: boolean | null;
  text: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'number-tout-block';
}
export interface IResponsiveGrid {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'responsive-grid-block';
}
export interface IReusableContentBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'reusable-content-block';
}
export interface IRowBlock {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'row-block';
}
export interface ISlider {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'slider-block';
}
export interface ISpacerBlock {
  space?: ('small' | 'medium' | 'large') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'spacer-block';
}
export interface ITestimonialBlock {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  text: {
    [k: string]: unknown;
  }[];
  author: string;
  title?: string | null;
  image?: string | Media | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonial-block';
}
export interface ITextBlock {
  blockHeader?: IBlockHeader;
  trailingContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  text: {
    [k: string]: unknown;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'text-block';
}
export interface User {
  id: string;
  name?: string | null;
  photo?: string | Media | null;
  roles: ('admin' | 'editor' | 'public')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface Footer {
  id: string;
  columns: {
    heading?: string | null;
    navItems?:
      | {
          link: ILink;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface MainMenu {
  id: string;
  navItems?:
    | {
        link: ILink;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface ThemeVariable {
  id: string;
  colors: {
    brandPrimary?: string | null;
    brandSecondary?: string | null;
    brandTertiary?: string | null;
    linkColor?: string | null;
    linkHoverColor?: string | null;
    linkActiveColor?: string | null;
  };
  layout: {
    columnGutter?: string | null;
    maxWidth?: string | null;
  };
  mapsApiKey?: string | null;
  analyticsSnippet?: string | null;
  elements: {
    Background?: string | null;
    Color?: string | null;
  };
  header: {
    Background?: string | null;
    Color?: string | null;
    linkColor?: string | null;
    linkHoverColor?: string | null;
    linkActiveColor?: string | null;
  };
  footer: {
    Background?: string | null;
    Color?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Address {
  id: string;
  street: string;
  unit?: string | null;
  city: string;
  state: string;
  zip?: number | null;
  phone: number;
  email: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}